{"version":3,"sources":["Components/tokenUtils.js","Components/createAuthProvider.js","Components/Tables.js","Components/AuthForm.style.js","Components/Login.js","Components/ListUsers.js","Components/LoginAdmin.js","App.js","serviceWorker.js","index.js"],"names":["createTokenProvider","axios","create","baseURL","stored","localStorage","getItem","storedAdmin","_token","JSON","parse","_token_admin","isLoggedIn","isLoggedInAdmin","observers","observersAdmin","getToken","a","setToken","token","admin","setItem","stringify","removeItem","isLogged","isLoggedAdmin","forEach","observer","notify","subscribe","push","subscribeAdmin","unsubscribeAdmin","filter","_observer","unsubscribe","instance","tokenProvider","useAuth","loggedIn","useState","setIsLogged","useEffect","listener","newIsLogged","useAuthAdmin","setIsLoggedAdmin","newIsLoggedAdmin","authFetch","input","init","get","then","response","data","catch","e","console","log","message","headers","Authorization","fetch","login","newTokens","logout","loginAdmin","createAuthProvider","apiClient","Tables","bets","setBets","Date","toLocaleString","updateDate","isLoading","setIsLoading","hasErrorOccured","setHasErrorOccured","optionsSport","setOptionsSport","optionsMatch","setOptionsMatch","optionsPari","setOptionsPari","optionsCompetition","setOptionsCompetition","optionsSportValue","setOptionsSportValue","optionsCompetitionValue","setOptionsCompetitionValue","optionsPariValue","setOptionsPariValue","optionsMatchValue","setOptionsMatchValue","resultsSelect","setResultsSelect","page","setPage","total","setTotal","pageNumber","apiUrl","replace","getSport","getFilteredCompetition","getFilteredMatch","getFilteredPari","_fetchbet","getDate","time","day","split","reverse","join","sport","value","label","optionsSportVal","competition","optionsCompetitionVal","game","bet_libelle","getAllBet","getBets","togglePlayerBckg","type","className","options","placeholder","onChange","handleSelectSport","handleSelectCompetition","handleSelectMatch","handleSelectPari","Button","animated","onClick","Content","visible","hidden","Icon","name","Table","Row","HeaderCell","colSpan","Pagination","totalPages","Math","ceil","onPageChange","d","activePage","celled","unstackable","Header","Body","renderArray","player","slug","betSlug","length","key","id","Cell","href","player_url","target","rel","player_firstname","player_name","homeTeamName","extTeamName","date","cut","map","el","index","isMax","cote","bet","renderBets","Card","styled","div","Form","Input","button","Login","img","username","setUsername","password","setPassword","logIn","obj","post","accessToken","to","ListUsers","usersList","setUsersList","getUsers","deleteUser","delete","leftUsers","toast","success","error","HandleSignup","user","LoginAdmin","AuthRoute","props","logged","origin","App","loggedAdmin","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c1f30ff.chunk.js","sourcesContent":["import axios from 'axios';\nimport { authFetch } from \"../Components/createAuthProvider\"\n\nconst createTokenProvider = () => {\n  const instance = axios.create({\n    baseURL: \"http://176.58.105.174:3000\",\n  });\n\n  let stored = localStorage.getItem(\"BET_TOKEN_AUTH52456\") || \"\";\n  let storedAdmin = localStorage.getItem(\"BET_TOKEN_AUTH52459874566\") || \"\";\n\n  let _token = stored ? JSON.parse(stored) || null : null;\n  let _token_admin = storedAdmin ? JSON.parse(storedAdmin) || null : null;\n\n  const getToken = async () => {\n    if (!_token) {\n      return null;\n    }\n    return _token;\n  };\n\n  const isLoggedIn = () => {\n    return !!_token || !!_token_admin; // Transforme la valeur en booléan\n  };\n\n  const isLoggedInAdmin = () => {\n    return !!_token_admin; // Transforme la valeur en booléan\n  };\n\n\n  let observers = [];\n  let observersAdmin = [];\n\n  const subscribe = (observer) => {\n    observers.push(observer);\n  };\n\n  const unsubscribe = (observer) => {\n    observers = observers.filter((_observer) => _observer !== observer);\n  };\n\n  const subscribeAdmin = (observer) => {\n    observersAdmin.push(observer);\n  };\n\n  const unsubscribeAdmin = (observer) => {\n    observersAdmin = observersAdmin.filter((_observer) => _observer !== observer);\n  };\n\n  const notify = () => {\n    const isLogged = isLoggedIn();\n    const isLoggedAdmin = isLoggedInAdmin();\n    if (isLoggedAdmin) {\n      observers.forEach((observer) => observer(isLoggedAdmin));\n      observersAdmin.forEach((observer) => observer(isLoggedAdmin));\n    } else {\n      observers.forEach((observer) => observer(isLogged));\n      observersAdmin.forEach((observer) => observer(isLoggedAdmin));\n    }\n\n  };\n\n  const setToken = (token, admin) => {\n    if (token) {\n      if (admin) {\n        localStorage.setItem(\"BET_TOKEN_AUTH52459874566\", JSON.stringify(token));\n        _token_admin = token;\n\n      } else {\n        localStorage.setItem(\"BET_TOKEN_AUTH52456\", JSON.stringify(token));\n        _token = token;\n      }\n    } else {\n      localStorage.removeItem(\"BET_TOKEN_AUTH52459874566\");\n      localStorage.removeItem(\"BET_TOKEN_AUTH52456\");\n\n    }\n    notify();\n  };\n\n  return {\n    getToken,\n    isLoggedIn,\n    isLoggedInAdmin,\n    setToken,\n    subscribe,\n    subscribeAdmin,\n    unsubscribeAdmin,\n    unsubscribe,\n  };\n};\n\nexport default createTokenProvider;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport createTokenProvider from \"./tokenUtils\";\n\nconst createAuthProvider = () => {\n  const instance = axios.create({\n    baseURL: \"http://176.58.105.174:3000\",\n  });\n  const tokenProvider = createTokenProvider();\n\n  const login = (newTokens) => {\n    tokenProvider.setToken(newTokens);\n  };\n\n  const loginAdmin = (newTokens) => {\n    tokenProvider.setToken(newTokens, true);\n  };\n\n  const logout = () => {\n    tokenProvider.setToken(null);\n  };\n\n  const authFetch = async (input, init) => {\n    const token = await tokenProvider.getToken();\n\n    const usersList = await instance\n      .get(`/auth/users`)\n      .then(function (response) {\n        return response.data;\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n    init = init || {};\n\n    init.headers = {\n      ...init.headers,\n      Authorization: `Bearer ${token}`,\n    };\n\n    return fetch(input, init);\n  };\n\n  const useAuth = () => {\n    const loggedIn = tokenProvider.isLoggedIn();\n    const [isLogged, setIsLogged] = useState(loggedIn);\n\n    useEffect(() => {\n      function listener(newIsLogged) {\n        setIsLogged(newIsLogged);\n      }\n\n      tokenProvider.subscribe(listener);\n\n      return () => {\n        tokenProvider.unsubscribe(listener);\n      };\n    }, []);\n\n    return [isLogged];\n  };\n\n  const useAuthAdmin = () => {\n    const loggedIn = tokenProvider.isLoggedInAdmin();\n    const [isLoggedAdmin, setIsLoggedAdmin] = useState(loggedIn);\n\n    useEffect(() => {\n      function listener(newIsLoggedAdmin) {\n        setIsLoggedAdmin(newIsLoggedAdmin);\n      }\n\n      tokenProvider.subscribeAdmin(listener);\n\n      return () => {\n        tokenProvider.unsubscribeAdmin(listener);\n      };\n    }, []);\n\n    return [isLoggedAdmin];\n  };\n\n  return {\n    useAuth,\n    useAuthAdmin,\n    authFetch,\n    login,\n    logout,\n    loginAdmin,\n  };\n};\n\nexport const {\n  useAuth,\n  useAuthAdmin,\n  authFetch,\n  login,\n  loginAdmin,\n  logout,\n} = createAuthProvider();\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Button, Icon, Table, Pagination } from \"semantic-ui-react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport { useAuth, authFetch, login, logout } from \"./createAuthProvider\";\nimport Loader from \"react-loaders\";\nimport \"../Assets/Sass/main.scss\";\n\nconst pageLimit = 1;\n\nconst apiClient = axios.create({\n  baseURL: \"http://176.58.105.174:3000\",\n});\n\nconst Tables = () => {\n  const [bets, setBets] = useState([]);\n  const [updateDate, setupdateDate] = useState(new Date().toLocaleString());\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasErrorOccured, setHasErrorOccured] = useState(false);\n  const [optionsSport, setOptionsSport] = useState([]);\n  const [optionsMatch, setOptionsMatch] = useState([]);\n  const [optionsPari, setOptionsPari] = useState([]);\n  const [optionsCompetition, setOptionsCompetition] = useState(\"\");\n  const [optionsSportValue, setOptionsSportValue] = useState(\"\");\n  const [optionsCompetitionValue, setOptionsCompetitionValue] = useState(\"\");\n  const [optionsPariValue, setOptionsPariValue] = useState(\"\");\n  const [optionsMatchValue, setOptionsMatchValue] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [resultsSelect, setResultsSelect] = useState([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    async function _fetchbet(pageNumber) {\n      try {\n        const apiUrl = `basket/getBets?sport=${optionsSportValue}&league=${optionsCompetitionValue}&game=${optionsMatchValue.replace(\n          /\\s+/g,\n          \"-\"\n        )}&bet=${optionsPariValue}&offset=${(pageNumber - 1) * pageLimit}\n        &limit=${pageLimit}`.replace(/\\s+/g, \"\");\n\n        const { data, total } = await apiClient\n          .get(apiUrl)\n          .then(function (response) {\n            return response.data;\n          });\n\n        setBets(data);\n        setTotal(total);\n        getSport();\n        getFilteredCompetition();\n        getFilteredMatch();\n        getFilteredPari();\n      } catch (error) {\n        setHasErrorOccured(\"Une erreur est survenu : \", error.message);\n      }\n    }\n\n    _fetchbet(page);\n    setIsLoading(false);\n  }, [page]);\n\n  const handleSelectSport = (e) => {\n    setOptionsSportValue(e);\n    getFilteredCompetition(e);\n\n    setResultsSelect([...resultsSelect, e]);\n  };\n\n  const handleSelectCompetition = (e) => {\n    setOptionsCompetitionValue(e);\n    getFilteredMatch(e);\n    setResultsSelect([...resultsSelect, e]);\n  };\n\n  const handleSelectMatch = (e) => {\n    setOptionsMatchValue(e);\n    setResultsSelect([...resultsSelect, e]);\n  };\n\n  const handleSelectPari = (e) => {\n    setOptionsPariValue(e);\n    setResultsSelect([...resultsSelect, e]);\n  };\n\n  const getDate = (time) => {\n    let day = time.split(\"T\")[0].split(\"-\").reverse().join(\"/\");\n    return ` : ${day}`;\n  };\n\n  const getSport = async () => {\n    const apiUrl = `basket/getSports`;\n    const data = await apiClient.get(apiUrl).then(function (response) {\n      return response.data;\n    });\n    const optionsSport = [];\n    for (const sport of data) {\n      optionsSport.push({\n        value: sport,\n        label: sport,\n      });\n    }\n\n    setOptionsSport(optionsSport);\n  };\n\n  const getFilteredCompetition = async (optionsSportVal) => {\n    const apiUrl = `basket/getLeagues?sport=${optionsSportVal}`;\n    const data = await apiClient.get(apiUrl).then(function (response) {\n      return response.data;\n    });\n    const optionsCompetition = [];\n    for (const competition of data) {\n      optionsCompetition.push({\n        value: competition,\n        label: competition,\n      });\n    }\n\n    setOptionsCompetition(optionsCompetition);\n  };\n\n  const getFilteredMatch = async (optionsCompetitionVal) => {\n    const apiUrl = `basket/getGames?sport=${optionsSportValue}&league=${optionsCompetitionVal}`;\n    const data = await apiClient.get(apiUrl).then(function (response) {\n      return response.data;\n    });\n    const optionsMatch = [];\n    for (const game of data) {\n      optionsMatch.push({\n        value: game,\n        label: game,\n      });\n    }\n\n    setOptionsMatch(optionsMatch);\n  };\n\n  const getFilteredPari = async () => {\n    const apiUrl = `basket/getBetsLibelles?sport=${optionsSportValue}&league=${optionsCompetitionValue}&game=${optionsMatchValue.replace(\n      /\\s+/g,\n      \"-\"\n    )}`;\n\n    const data = await apiClient.get(apiUrl).then(function (response) {\n      return response.data;\n    });\n    const optionsPari = [];\n    for (const bet_libelle of data) {\n      optionsPari.push({\n        value: bet_libelle,\n        label: bet_libelle,\n      });\n    }\n\n    setOptionsPari(optionsPari);\n  };\n\n  const getAllBet = async () => {\n    const apiUrl = `basket/getBets?sport=&league=&game=&bet=&offset=${(page - 1) * pageLimit\n      }\n    &limit=${pageLimit}`.replace(/\\s+/g, \"\");\n\n    const { data, total } = await apiClient\n      .get(apiUrl)\n      .then(function (response) {\n        return response.data;\n      });\n\n    setBets(data);\n    setTotal(total);\n  };\n\n  const getBets = async () => {\n    const apiUrl = `basket/getBets?sport=${optionsSportValue}&league=${optionsCompetitionValue}&game=${optionsMatchValue.replace(\n      /\\s+/g,\n      \"-\"\n    )}&bet=${optionsPariValue}&offset=${(page - 1) * pageLimit}\n    &limit=${pageLimit}`.replace(/\\s+/g, \"\");\n\n    setPage(1);\n\n    const { data, total } = await apiClient\n      .get(apiUrl)\n      .then(function (response) {\n        return response.data;\n      });\n\n    setBets(data);\n    setTotal(total);\n  };\n\n  let togglePlayerBckg = false;\n\n  const renderBets = () => {\n    const renderArray = [];\n    if (bets) {\n      for (const game in bets) {\n        for (const player in bets[game]) {\n          togglePlayerBckg = !togglePlayerBckg;\n          for (const slug in bets[game][player]) {\n            let betSlug = bets[game][player][slug];\n            if (betSlug.length > 1) {\n              let data = betSlug[0];\n              renderArray.push(\n                <Table.Row key={data.id}>\n                  <Table.Cell className={togglePlayerBckg ? \"blue\" : \"\"}>\n                    <a\n                      href={`${data.player_url}`}\n                      target={\"_blank\"}\n                      rel=\"noopener noreferrer\"\n                      className={togglePlayerBckg ? \"white\" : \"black\"}\n                    >\n                      {data.player_firstname} {data.player_name}\n                    </a>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <strong>{data.homeTeamName}</strong> VS {data.extTeamName}\n                    {getDate(data.date)}\n                  </Table.Cell>\n                  <Table.Cell>\n                    {data.bet_libelle} : {data.cut}\n                  </Table.Cell>\n                  <Table.Cell>\n                    {betSlug.map((el, index) => {\n                      return (\n                        <>\n                          <p\n                            key={index}\n                            className={el.isMax ? \"line grey\" : \"line\"}\n                          >\n                            {el.name} {el.cote}\n                          </p>\n                        </>\n                      );\n                    })}\n                  </Table.Cell>\n                </Table.Row>\n              );\n            } else {\n              for (const index in bets[game][player][slug]) {\n                const bet = bets[game][player][slug][index];\n                renderArray.push(\n                  <Table.Row key={bet.id}>\n                    <Table.Cell className={togglePlayerBckg ? \"blue\" : \"\"}>\n                      <a\n                        href={`${bet.player_url}`}\n                        target={\"_blank\"}\n                        rel=\"noopener noreferrer\"\n                        className={togglePlayerBckg ? \"white\" : \"black\"}\n                      >\n                        {bet.player_firstname} {bet.player_name}\n                      </a>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <strong>{bet.homeTeamName}</strong> VS {bet.extTeamName}\n                      {getDate(bet.date)}\n                    </Table.Cell>\n                    <Table.Cell>\n                      {bet.bet_libelle} : {bet.cut}\n                    </Table.Cell>\n                    <Table.Cell>\n                      <p className=\"line\">\n                        {bet.name} {bet.cote}\n                      </p>\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n    return renderArray;\n  };\n\n  // const logoutAndRefresh = () => {\n  //   logout();\n  //   window.location.reload();\n  // };\n\n  if (!hasErrorOccured) {\n    if (isLoading) {\n      return <Loader type=\"ball-spin-fade-loader\" />;\n    } else {\n      return (\n        <Fragment>\n          <h1>Bet Application</h1>\n          {/* <Button\n            animated\n            className=\"red red-logout\"\n            onClick={logoutAndRefresh}\n          >\n            <Button.Content visible>Log out</Button.Content>\n            <Button.Content hidden>\n              <Icon name=\"arrow right\" />\n            </Button.Content>\n          </Button> */}\n          <div className=\"dropdown-container\">\n            <Select\n              options={optionsSport}\n              placeholder={<div>Sports</div>}\n              onChange={(e) => handleSelectSport(e.value)}\n            />\n            <Select\n              options={optionsCompetition}\n              placeholder={<div>Competition</div>}\n              onChange={(e) => handleSelectCompetition(e.value)}\n            />\n            <Select\n              options={optionsMatch}\n              placeholder={<div>Match</div>}\n              onChange={(e) => handleSelectMatch(e.value)}\n            />\n            <Select\n              options={optionsPari}\n              placeholder={<div>Paris</div>}\n              onChange={(e) => handleSelectPari(e.value)}\n            />\n            <Button animated className=\"primary\" onClick={getBets}>\n              <Button.Content visible>Rechercher</Button.Content>\n              <Button.Content hidden>\n                <Icon name=\"arrow right\" />\n              </Button.Content>\n            </Button>\n            {/* <Button color=\"green\" onClick={() => refreshSearch()}>\n              <img src={refresh} alt=\"refresh\" className=\"refresh-img\" />\n            </Button> */}\n            <Button animated className=\"red\" onClick={getAllBet}>\n              <Button.Content visible>Tous</Button.Content>\n              <Button.Content hidden>\n                <Icon name=\"arrow right\" />\n              </Button.Content>\n            </Button>\n          </div>\n          <div className=\"dropdown-container-time\">\n            <div>\n              <p>Date et heure de la dernière MAJ : {updateDate}</p>\n            </div>\n            {/* <div className=\"search-all\">\n              <Button animated className=\"red\" onClick={getAllBet}>\n                <Button.Content visible>Tous</Button.Content>\n                <Button.Content hidden>\n                  <Icon name=\"arrow right\" />\n                </Button.Content>\n              </Button>\n            </div> */}\n          </div>\n          <Table.Row className=\"pagination-marge\">\n            <Table.HeaderCell colSpan=\"4\">\n              <Pagination\n                totalPages={Math.ceil(total / pageLimit)}\n                onPageChange={(e, d) => setPage(d.activePage)}\n                activePage={page}\n              />\n            </Table.HeaderCell>\n          </Table.Row>\n          <Table celled unstackable>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Joueur</Table.HeaderCell>\n                <Table.HeaderCell>Match</Table.HeaderCell>\n                <Table.HeaderCell>Cut</Table.HeaderCell>\n                <Table.HeaderCell>Cotes</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>{renderBets()}</Table.Body>\n\n            {/* <Table.Footer>\n             \n            </Table.Footer> */}\n          </Table>\n        </Fragment>\n      );\n    }\n  } else {\n    return <h2>{hasErrorOccured}</h2>;\n  }\n};\n\nexport default Tables;\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  box-sizing: border-box;\n  max-width: 410px;\n  margin: 0 auto;\n  padding: 0 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  padding: 1rem;\n  border: 1px solid #999;\n  margin-bottom: 1rem;\n  font-size: 0.8rem;\n`;\n\nconst Button = styled.button`\n  background: linear-gradient(to bottom, #6371c7, #5563c1);\n  border-color: #3f4eae;\n  border-radius: 3px;\n  padding: 1rem;\n  color: white;\n  font-weight: 700;\n  width: 100%;\n  margin-bottom: 1rem;\n  font-size: 0.8rem;\n`;\n\nconst Logo = styled.img`\n  width: 50%;\n  margin-bottom: 1rem;\n`;\n\nconst Error = styled.div`\n  background-color: red;\n`;\n\nexport { Form, Input, Button, Logo, Card, Error };\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Card, Form, Input, Button } from \"./AuthForm.style\";\nimport {\n  useAuth,\n  authFetch,\n  login,\n  loginAdmin,\n  logout,\n} from \"./createAuthProvider\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleUsername = (name) => {\n    setUsername(name.target.value);\n  };\n\n  const handlePassword = (pass) => {\n    setPassword(pass.target.value);\n  };\n\n  const instance = axios.create({\n    baseURL: \"http://176.58.105.174:3000\",\n  });\n\n  const logIn = async () => {\n    let obj = {};\n    obj.username = username;\n    obj.password = password;\n\n    const data = await instance\n      .post(`/auth/signin`, obj)\n      .then(function (response) {\n        return login(response.data.accessToken);\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n  };\n\n  // const logInAdmin = async () => {\n  //   let obj = {};\n  //   obj.username = username;\n  //   obj.password = password;\n\n  //   const data = await instance\n  //     .post(`/auth/signinadmin`, obj)\n  //     .then(function (response) {\n  //       return loginAdmin(response.data.accessToken);\n  //     })\n  //     .catch((e) => {\n  //       console.log(e.message);\n  //     });\n  // };\n\n  return (\n    <>\n      <h1 className=\"login-title\">Welcome to Bet Application</h1>\n      <Card className=\"mt-login\">\n        <Form>\n          <Input\n            type=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => handleUsername(e)}\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={(e) => handlePassword(e)}\n          />\n          <Button className=\"btn-login\" onClick={logIn}>\n            Sign In\n          </Button>\n          {/* <Button className=\"btn-login\" onClick={logInAdmin}>\n            Sign In For Admin\n          </Button> */}\n        </Form>\n        <Link to=\"/signup\">Don't have an account?</Link>\n      </Card>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { Card, Form, Input } from \"./AuthForm.style\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { logout } from \"./createAuthProvider\";\n// import { Link } from \"react-router-dom\";\n//fezOIJ490\"çJI\nconst instance = axios.create({\n  baseURL: \"http://176.58.105.174:3000\",\n});\n\nconst ListUsers = () => {\n  const [usersList, setUsersList] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    async function getUsers() {\n      const usersList = await instance\n        .get(`/auth/users`)\n        .then(function (response) {\n          return response.data;\n        })\n        .catch((e) => {\n          console.log(e.message);\n        });\n      setUsersList(usersList);\n    }\n    getUsers();\n  }, []);\n\n  const deleteUser = async (username) => {\n    await instance\n      .delete(`/auth/user?username=${username}`)\n      .then(function (response) {\n        if (response.data === true) {\n          const leftUsers = usersList.filter((e) => e !== username);\n          setUsersList(leftUsers);\n        }\n        toast.success(\"Utilisateur supprimé !\");\n        return response.data;\n      })\n      .catch((e) => {\n        if (e.response && e.response.data && e.response.data.message) {\n          toast.error(e.response.data.message);\n        } else {\n          toast.error(\"L'utilisateur n'a pas été supprimé !\")\n        }\n      });\n  };\n\n  const handleUsername = (name) => {\n    setUsername(name.target.value);\n  };\n\n  const handlePassword = (pass) => {\n    setPassword(pass.target.value);\n  };\n\n  const HandleSignup = async () => {\n    let obj = {};\n    obj.username = username;\n    obj.password = password;\n\n    await instance\n      .post(`/auth/signup`, obj)\n      .then(async function (response) {\n        const usersList = await instance\n          .get(`/auth/users`)\n          .then(function (response) {\n            return response.data;\n          })\n          .catch((e) => {\n            console.log(e.message);\n          });\n        setUsersList(usersList);\n        toast.success(\"Utilisateur ajouté !\");\n      })\n      .catch((e) => {\n        if (e.response && e.response.data && e.response.data.message) {\n          if (typeof e.response.data.message === 'string') toast.error(e.response.data.message);\n          else {\n            e.response.data.message.map(e => {\n              toast.error(e)\n            })\n          }//fez\n        } else {\n          toast.error(\"L'utilisateur n'a pas été ajouté !\")\n        }\n      });\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <h1 className=\"login-title\">Welcome to Admin Interface</h1>\n      <Card>\n        <Form>\n          <Input\n            type=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => handleUsername(e)}\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={(e) => handlePassword(e)}\n          />\n          <Button className=\"btn-login\" onClick={() => HandleSignup()}>\n            Sign Up\n          </Button>\n        </Form>\n      </Card>\n      <ul className=\"ul-mt\">\n        {usersList.length > 0 ? (\n          usersList.map((user, key) => {\n            return (\n              <>\n                <li key={key} className=\"list-users\">\n                  {user}\n                  <Button\n                    animated\n                    className=\"red red-logout\"\n                    onClick={() => deleteUser(user)}\n                  >\n                    <Button.Content visible>Supprimer</Button.Content>\n                    <Button.Content hidden>\n                      <Icon name=\"arrow right\" />\n                    </Button.Content>\n                  </Button>\n                </li>\n              </>\n            );\n          })\n        ) : (\n            <li>Aucun utilisateurs</li>\n          )}\n      </ul>\n      {/* <Button>\n        <Link to={\"/bet\"} />\n        Go to Bets\n      </Button> */}\n      {/* <Button animated className=\"red red-logout\" onClick={logout}>\n        <Button.Content visible>Log out</Button.Content>\n        <Button.Content hidden>\n          <Icon name=\"arrow right\" />\n        </Button.Content>\n      </Button> */}\n    </>\n  );\n};\n\nexport default ListUsers;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Card, Form, Input, Button } from \"./AuthForm.style\";\nimport { useAuth, authFetch, login, loginAdmin, logout } from \"./createAuthProvider\";\n\nconst apiClient = \"http://176.58.105.174:3000\";\n\nconst LoginAdmin = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleUsername = (name) => {\n    setUsername(name.target.value);\n  };\n\n  const handlePassword = (pass) => {\n    setPassword(pass.target.value);\n  };\n\n  const instance = axios.create({\n    baseURL: \"http://176.58.105.174:3000\",\n  });\n\n  const logIn = async () => {\n    let obj = {};\n    obj.username = username;\n    obj.password = password;\n\n    const data = instance\n      .post(`${apiClient}/auth/signinadmin`, obj)\n      .then(function (response) {\n        return loginAdmin(response.data.accessToken);\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n  };\n\n  return (\n    <>\n      <h1 className=\"login-title\">Welcome to Bet Application</h1>\n      <Card className=\"mt-login\">\n        <Form>\n          <Input\n            type=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => handleUsername(e)}\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={(e) => handlePassword(e)}\n          />\n          <Button className=\"btn-login\" onClick={logIn}>\n            Sign In\n          </Button>\n        </Form>\n        <Link to=\"/signup\">Don't have an account?</Link>\n      </Card>\n    </>\n  );\n};\n\nexport default LoginAdmin;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  HashRouter,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport { useAuth, useAuthAdmin } from \"./Components/createAuthProvider\";\nimport \"./Assets/Sass/main.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Tables from \"./Components/Tables\";\n\nimport Login from \"./Components/Login\";\nimport ListUsers from \"./Components/ListUsers\";\nimport LoginAdmin from \"./Components/LoginAdmin\";\n\nconst AuthRoute = (props) => {\n  const { logged, type, origin } = props;\n  if (type === \"private\" && !logged) {\n    if (origin === \"/bet\") return <Redirect to=\"/login\" />;\n    else if (origin === \"/admin1263\") return <Redirect to=\"/loginadmin\" />;\n  }\n  if (logged) {\n    if (origin === \"/login\") return <Redirect to=\"/bet\" />;\n    else if (origin === \"/loginadmin\") return <Redirect to=\"/admin1263\" />;\n  }\n  return <Route {...props} />;\n};\n\nconst App = () => {\n  const [logged] = useAuth();\n  const [loggedAdmin] = useAuthAdmin();\n\n  return (\n    <HashRouter >\n      <div className=\"App\">\n        <Switch>\n          <AuthRoute path=\"/bet\" origin=\"/bet\" type=\"private\" logged={logged}>\n            <Tables />\n          </AuthRoute>\n          <AuthRoute path=\"/login\" origin=\"/login\" type=\"guest\" logged={logged}>\n            <Login />\n          </AuthRoute>\n          <AuthRoute path=\"/admin1263\" origin=\"/admin1263\" type=\"private\" logged={loggedAdmin}>\n            <ListUsers />\n          </AuthRoute>\n          <AuthRoute path=\"/loginadmin\" origin=\"/loginadmin\" type=\"guest\" logged={loggedAdmin}>\n            <LoginAdmin />\n          </AuthRoute>\n          <Route render={() => <Redirect to=\"/login\" />} />\n        </Switch >\n      </div >\n    </HashRouter >\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}